<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>

   <extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
			id="org.eclipse.jdt.internal.ui.JavaPreferencesPropertyTester"
			type="java.lang.Object"
			namespace="org.eclipse.jdt.codemining"
			properties="hasPreference"
			class="org.eclipse.jdt.internal.ui.preferences.JavaPreferencesPropertyTester">
		</propertyTester>
  </extension>

  <extension
         point="org.eclipse.ui.workbench.texteditor.codeMiningProviders">
      <codeMiningProvider
         class="org.eclipse.jdt.internal.ui.javaeditor.codemining.JavaCodeMiningProvider"
         id="org.eclipse.jdt.ui.codemining.general"
         label="%JavaCodeMiningProvider.label">
	     <enabledWhen>
	        <and>
	            <with variable="editorInput">
	               <or>
		              <adapt type="org.eclipse.core.resources.IFile">
	                     <test property="org.eclipse.core.resources.contentTypeId" value="org.eclipse.jdt.core.javaSource" />                     
		              </adapt>
		              <adapt type="org.eclipse.jdt.core.IClassFile">
						<instanceof value="org.eclipse.jdt.core.IClassFile" />
		              </adapt>
		           </or>
	           	</with>
	           	<or>
	           	   <!-- TODO: change to property="org.eclipse.jdt.ui.hasPreference" -->
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.references" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.references.atLeastOne" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.implementations" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.implementations.atLeastOne" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.sccm.revison.recent.change" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.sccm.revison.recent.change.withDate" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.sccm.revision.authors" forcePluginActivation="true"/>	           	   
	           	</or>
           	</and>
         </enabledWhen>
      </codeMiningProvider>
   </extension>

   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            name="%codeMiningPageName"
            category="org.eclipse.jdt.ui.preferences.JavaEditorPreferencePage"
            class="org.eclipse.jdt.internal.ui.preferences.JavaEditorCodeMiningPreferencePage"
            id="org.eclipse.jdt.ui.preferences.JavaEditorCodeMiningPreferencePage">
            <keywordReference id="org.eclipse.jdt.ui.codemining"/>
      </page>   
    </extension>
   <extension
         point="org.eclipse.ui.keywords">
      <keyword
            id="org.eclipse.jdt.ui.codemining"
            label="code mining">
      </keyword>
   </extension>
   <extension
         point="com.genuitec.eclipse.patches.extensions">
      <class-weaver
            bundle="org.eclipse.jface.text"
            enabled="true"
            id="org.eclipse.jdt.codemining.fixPresentation"
            name="Fix CodeMining Line Header"
            weaver="com.genuitec.eclipse.codemining.patch.CodeMiningLineHeaderAnnotationWeaver">
         <woven-class
               name="org.eclipse.jface.internal.text.codemining.CodeMiningLineHeaderAnnotation">
         </woven-class>
      </class-weaver>
   </extension>   
</plugin>
